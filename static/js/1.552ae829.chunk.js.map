{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","DialogItem","props","path","id","react_default","a","createElement","className","s","dialog","NavLink","to","name","Message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","TextArea","validate","required","Dialogs","dialogsElements","state","map","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","isAuth","formData","onSendMessageClick","newMessageBody","Redirect","compose","connect","dialogsPage","dispatch","sendMessageCreator","Component","withAuthRedirect","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","React","auth"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,0HCWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEX,QACtCO,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,GAAIT,GAAOD,EAAMW,QCDnBC,EAJC,SAACZ,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QAASR,EAAMF,qDCyBtCe,EAAeC,YAAiB,KAahCC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,CAZL,SAAChB,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMa,SAAUlB,EAAMmB,cAClBhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACDC,YAAY,qBACZC,UAAWC,IACXC,SAAU,CAACC,IAASZ,GACpBF,KAAK,oBACTR,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,0BAOFqB,EApCC,SAAC1B,GACb,IAAI2B,EAAkB3B,EAAM4B,MAAMlC,QAAQmC,IAAI,SAAAC,GAAC,OAAI3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAYpB,KAAMmB,EAAEnB,KAAMT,GAAI4B,EAAE5B,OAC/E8B,EAAmBhC,EAAM4B,MAAM/B,SAASgC,IAAI,SAAAI,GAAC,OAAI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAASpC,QAASmC,EAAEnC,YAKzE,OAAKE,EAAMmC,OAEPhC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,SACdS,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,cACbgC,GAELxB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,UACdM,EAAAC,EAAAC,cAAA,WAAM2B,GACN7B,EAAAC,EAAAC,cAACU,EAAD,CAAqBG,SAZb,SAACkB,GAEjBpC,EAAMqC,mBAAmBD,EAASE,qBAEZnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAU7B,GAAI,kECG7B8B,sBACXC,YAbkB,SAACb,GACnB,MAAO,CACHA,MAAOA,EAAMc,cAGI,SAACC,GACtB,MAAO,CACHN,mBAAoB,SAACD,GACjBO,EAASC,YAAmBR,QCXR,SAACS,GAAc,IACrCC,EADqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAGnC,OAAIR,KAAKlD,MAAMmC,OACRhC,EAAAC,EAAAC,cAACwC,EAAcK,KAAKlD,OADGG,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAU7B,GAAG,eAHRoC,EAAA,CACZa,IAAMd,WAYrC,OADqCJ,YALf,SAACb,GACnB,MAAO,CACHO,OAAQP,EAAMgC,KAAKzB,SAGUM,CAAyBK,IDGnDN,CAGbd","file":"static/js/1.552ae829.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2gzr4\",\"dialogsItems\":\"Dialogs_dialogsItems__Y0W9q\",\"active\":\"Dialogs_active__33son\",\"messages\":\"Dialogs_messages__22YNB\",\"message\":\"Dialogs_message__m0G3j\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n    let messagesElements = props.state.messages.map(m => <Message message={m.message} />);\r\n    let addNewMessage = (formData) => {\r\n\r\n        props.onSendMessageClick(formData.newMessageBody);\r\n    }\r\n    if (!props.isAuth) return <Redirect to={\"login\"} />;\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field\r\n                placeholder='Enter your message'\r\n                component={TextArea}\r\n                validate={[required,maxLength100]}\r\n                name='newMessageBody'/></div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessageClick: (formData) => {\r\n            dispatch(sendMessageCreator(formData));\r\n        }\r\n    }\r\n}\r\nexport default compose (\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class withAuthRedirect extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(withAuthRedirect);\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"sourceRoot":""}