{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/profileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","../node_modules/reselect/es/index.js","redux/profile-selects.js","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","img","description","contacts","contactsDescr","postsBlock","posts","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","_ref","profile","className","s","src","photos","large","userPhoto","aboutMe","profileStatusWithHooks","preloader","Post","message","likesCount","maxLength","maxLengthCreator","MyPosts","React","memo","postsElements","map","p","MyPosts_Post_Post","key","id","AddPostFormReact","onSubmit","formData","addPost","addNewPost","reduxForm","form","handleSubmit","Field","component","TextArea","name","validate","required","placeholder","MyPostContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","assign","MyPosts_MyPostContainer","defaultEqualityCheck","b","createSelector","memoize","_len","arguments","length","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","join","Error","getDependencies","memoizedResultFunc","apply","undefined","concat","selector","params","i","push","resetRecomputations","createSelectorCreator","func","equalityCheck","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","getProfile","getProfileStatus","getAuthorizedUserId","auth","ProfileContainer","userId","this","match","authorizedUserId","history","setProfileUser","getStatus","components_Profile_Profile","Component","compose","setUsersProfile","withRouter"],"mappings":"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","file":"static/js/2.8b123bcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1Gx1x\",\"img\":\"ProfileInfo_img__31iuQ\",\"description\":\"ProfileInfo_description__39zFK\",\"contacts\":\"ProfileInfo_contacts__2w7Vx\",\"contactsDescr\":\"ProfileInfo_contactsDescr__2gt80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2XFKV\",\"posts\":\"MyPosts_posts__29Q5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__EzNoY\"};","import React, { useState, useEffect } from 'react';\r\n/* import s from './ProfileInfo.module.css'; */\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () =>  {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n       setStatus(props.status); \r\n    },[props.status])\r\n     \r\n    return (\r\n        \r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '........'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div >\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assetsImg/user.png';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport ProfileStatusWithHooks from './profileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    } else {\r\n        return (\r\n            <div>\r\n                {/* <div>\r\n                    <img\r\n                        src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350' />\r\n                </div> */}\r\n                <div className=\"avatar\">\r\n                    <img className={s.img} src={profile.photos.large != null ? profile.photos.large : userPhoto} />\r\n                    <div className={s.description}>{profile.aboutMe}</div>\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators';\r\nimport { TextArea } from '../../common/FormsControls/FormsControls';\r\nlet maxLength = maxLengthCreator(100);\r\n\r\n/* class MyPosts extends PureComponent {\r\n    render() {\r\n        let postsElements =\r\n            this.props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n        let onSubmit = (formData) => {\r\n            this.props.addPost(formData.addNewPost);\r\n        }\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddPostFormReact onSubmit={onSubmit} />\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} */\r\n\r\n/* class MyPosts extends  {\r\n    shouldComponentUpdate(nextProps,nextState) {\r\n        return nextProps != this.props || nextState != this.state;\r\n    }\r\n    render() {\r\n        let postsElements =\r\n            this.props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n        let onSubmit = (formData) => {\r\n            this.props.addPost(formData.addNewPost);\r\n        }\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddPostFormReact onSubmit={onSubmit} />\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} */\r\nconst MyPosts = React.memo((props) => {\r\n   \r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n    let onSubmit = (formData) => {\r\n        props.addPost(formData.addNewPost);\r\n    }\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostFormReact onSubmit={onSubmit} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nconst AddPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name='addNewPost' validate={[required, maxLength]} placeholder={'Post message...'} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostFormReact = reduxForm({\r\n    form: 'addPostForm'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from './MyPosts/MyPostContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} {...props}/>\r\n            <MyPostContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile;","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n  var length = prev.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n  var lastArgs = null;\n  var lastResult = null; // we reference arguments instead of spreading them for performance reasons\n\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      return memoizedResultFunc.apply(null, params);\n    });\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n\n    selector.recomputations = function () {\n      return recomputations;\n    };\n\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n\n    return selector;\n  };\n}\nexport var createSelector = createSelectorCreator(defaultMemoize);\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\"\r\n\r\nlet getProfileSelector = (state) => {\r\n    return state.profilePage.profile\r\n}\r\nexport let getProfile = createSelector(getProfileSelector,(profile) => {\r\n    return profile;\r\n});\r\nexport let getProfileStatus = (state) => {\r\n    return state.profilePage.status\r\n}\r\nexport let getAuthorizedUserId = (state) => {\r\n    return state.auth.id\r\n}\r\nexport let getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { setUsersProfile, setProfileUser,getStatus,updateStatus } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getProfile, getAuthorizedUserId , getProfileStatus} from '../../redux/profile-selects';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.setProfileUser(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render () {\r\n        return (\r\n            <div>\r\n               \r\n                <Profile {...this.props} profile={this.props.profile}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        status: getProfileStatus(state),\r\n        authorizedUserId: getAuthorizedUserId(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {\r\n        setUsersProfile,\r\n        setProfileUser,\r\n        getStatus,\r\n        updateStatus\r\n    }),\r\n    withRouter,\r\n    /* withAuthRedirect */\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}